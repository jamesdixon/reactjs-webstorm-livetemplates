<templateSet group="React.js">
  <template name="rcc" value="var React = require('react');&#10;&#10;var $componentName$ = React.createClass({&#10;&#10;&#9;render: function() {&#10;&#9;&#9;return (&#10;        &lt;div&gt;&#10;            $END$&#10;        &lt;/div&gt;&#10;&#9;&#9;);&#10;&#9;}&#10;&#10;});&#10;&#10;module.exports = $componentName$;" description="React: Component skeleton" toReformat="false" toShortenFQNames="true">
    <variable name="componentName" expression="capitalize(self)" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="JS_EXPRESSION" value="true" />
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="cdup" value="componentDidUpdate: function(prevProps, prevState) {&#10;&#9;$END$&#10;}," description="React: componentDidUpdate: fn(pp, ps) { ... }" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="JS_EXPRESSION" value="true" />
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="cdm" value="componentDidMount: function() {&#10;&#9;$END$&#10;}," description="React: componentDidMount: fn() { ... }" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="JS_EXPRESSION" value="true" />
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="cs" value="var cx = React.addons.classSet;" description="React: var cx = React.addons.classSet;" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="JS_EXPRESSION" value="true" />
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="cwm" value="componentWillMount: function() {&#10;&#9;$END$&#10;}," description="React: componentWillMount: fn() { ... }" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="JS_EXPRESSION" value="true" />
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="cwr" value="componentWillReceiveProps: function(nextProps) {&#10;&#9;$END$&#10;}," description="React: componentWillReceiveProps: fn(np) { ... }" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="JS_EXPRESSION" value="true" />
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="cwun" value="componentWillUnmount: function() {&#10;&#9;$END$&#10;}," description="React: componentWillUnmount: fn() { ... }" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="JS_EXPRESSION" value="true" />
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="cwu" value="componentWillUpdate: function(nextProps, nextState) {&#10;&#9;$END$&#10;}," description="React: componentWillUpdate: fn(np, ns) { ... }" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="JS_EXPRESSION" value="true" />
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="cx" value="cx({&#10;&#9;$1$: $2$&#10;});" description="React: cx({ ... })" toReformat="false" toShortenFQNames="true">
    <variable name="1" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="2" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="JS_EXPRESSION" value="true" />
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="fup" value="forceUpdate($callback$);" description="React: forceUpdate(...)" toReformat="false" toShortenFQNames="true">
    <variable name="callback" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="JS_EXPRESSION" value="true" />
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="gdp" value="getDefaultProps: function() {&#10;&#9;return {&#10;&#9;&#9;$END$&#10;&#9;};&#10;}," description="React: getDefaultProps: fn() { return {...} }" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="JS_EXPRESSION" value="true" />
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="gis" value="getInitialState: function() {&#10;&#9;return {&#10;&#9;&#9;$1$: $2$&#10;&#9;};&#10;},&#10;" description="React: getInitialState: fn() { return {...} }" toReformat="false" toShortenFQNames="true">
    <variable name="1" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="2" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="JS_EXPRESSION" value="true" />
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="ism" value="isMounted()" description="React: isMounted()" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="JS_EXPRESSION" value="true" />
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="pt" value="propTypes: {&#10;&#9;$1$: React.PropTypes.$2$&#10;}," description="React: propTypes { ... }" toReformat="false" toShortenFQNames="true">
    <variable name="1" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="2" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="JS_EXPRESSION" value="true" />
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="ren" value="render: function() {&#10;&#9;return (&#10;&#9;    &lt;div&gt;&#10;&#9;        $content$&#10;&#9;    &lt;/div&gt;&#10;&#9;);&#10;}" description="React: render: fn() { return ... }" toReformat="false" toShortenFQNames="true">
    <variable name="content" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="JS_EXPRESSION" value="true" />
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="sst" value="this.setState({&#10;&#9;$1$: $2$&#10;});" description="React: this.setState({ ... })" toReformat="false" toShortenFQNames="true">
    <variable name="1" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="2" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="JS_EXPRESSION" value="true" />
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="scu" value="shouldComponentUpdate: function(nextProps, nextState) {&#10;&#9;$1$&#10;}," description="React: shouldComponentUpdate: fn(np, ns) { ... }" toReformat="false" toShortenFQNames="true">
    <variable name="1" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="JS_EXPRESSION" value="true" />
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="props" value="this.props.$1$" description="React: this.props." toReformat="false" toShortenFQNames="true">
    <variable name="1" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="JS_EXPRESSION" value="true" />
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="state" value="this.state.$1$" description="React: this.state." toReformat="false" toShortenFQNames="true">
    <variable name="1" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="JS_EXPRESSION" value="true" />
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="refs" value="this.refs.$1$" description="React: this.refs." toReformat="false" toShortenFQNames="true">
    <variable name="1" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="JS_EXPRESSION" value="true" />
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
</templateSet>